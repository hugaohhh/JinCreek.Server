{
  "x-generator": "NSwag v13.2.0.0 (NJsonSchema v10.1.2.0 (Newtonsoft.Json v12.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "JinCreek 認証アプリ API",
    "description": "JinCreek API",
    "termsOfService": "None",
    "version": "v1"
  },
  "consumes": [
    "application/json",
    "application/*+json"
  ],
  "paths": {
    "/api/deauthentication": {
      "post": {
        "tags": [
          "Deauthentication"
        ],
        "operationId": "Deauthentication_Deauthentication",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deauthenticationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeauthenticationRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/multi_factor/authentication": {
      "post": {
        "tags": [
          "MultiFactorAuthentication"
        ],
        "operationId": "MultiFactorAuthentication_Authentication",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "multiFactorAuthenticationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiFactorAuthenticationRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/MultiFactorAuthenticationResponse"
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/sim_device/authentication": {
      "post": {
        "tags": [
          "SimDeviceAuthentication"
        ],
        "operationId": "SimDeviceAuthentication_Authentication",
        "parameters": [
          {
            "name": "simDeviceAuthenticationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SimDeviceAuthenticationRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SimDeviceAuthenticationResponse"
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string",
          "minLength": 1
        },
        "errorMessage": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "DeauthenticationRequest": {
      "type": "object",
      "required": [
        "deviceImei",
        "simIccId",
        "simImsi",
        "simMsisdn",
        "account"
      ],
      "properties": {
        "deviceImei": {
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "simIccId": {
          "type": "string",
          "maxLength": 19,
          "minLength": 0
        },
        "simImsi": {
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "simMsisdn": {
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "account": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "MultiFactorAuthenticationResponse": {
      "type": "object",
      "properties": {
        "userConfigureDictionary": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "MultiFactorAuthenticationRequest": {
      "type": "object",
      "required": [
        "account",
        "authId"
      ],
      "properties": {
        "account": {
          "type": "string",
          "minLength": 1
        },
        "authId": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "SimDeviceAuthenticationResponse": {
      "type": "object",
      "required": [
        "authId"
      ],
      "properties": {
        "authId": {
          "type": "string",
          "minLength": 1
        },
        "assignDeviceIpAddress": {
          "type": "string"
        },
        "canLogonUsers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "simDeviceConfigureDictionary": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SimDeviceAuthenticationRequest": {
      "type": "object",
      "required": [
        "deviceImei",
        "simIccId",
        "simImsi",
        "simMsisdn"
      ],
      "properties": {
        "deviceImei": {
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "simIccId": {
          "type": "string",
          "maxLength": 19,
          "minLength": 0
        },
        "simImsi": {
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "simMsisdn": {
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "deviceIpAddress": {
          "type": "string",
          "pattern": "(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])"
        }
      }
    }
  }
}